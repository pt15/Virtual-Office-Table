(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> "
p3
sS'layer'
p4
S'/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py'
p5
sS'code'
p6
S'import imaplib\nfrom gluon.serializers import json\nimport time\nimport uuid\n#import email\nfrom email import email\nfrom email import message_from_string\nfrom email.parser import HeaderParser\nimport os\n\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\nImapDict = {\'gmail.com\':\'imap.gmail.com\',\'yahoo.com\':\'imap.mail.yahoo.com\',\'students.iiit.ac.in\':\'students.iiit.ac.in\',\'outlook.com\':\'imap-mail.outlook.com\', \'research.iiit.ac.in\': \'research.iiit.ac.in\'}\n\n\nclass MailBox(object):\n    def __init__(self, user, password):\n        self.user = user\n        self.password = password\n        part = user.split(\'@\')\n        if part[1] == \'students.iiit.ac.in\' or part[1] == \'research.iiit.ac.in\':\n            self.imap = imaplib.IMAP4(ImapDict[part[1]], 143)\n            self.user=part[0]\n        else:\n            self.imap = imaplib.IMAP4_SSL(ImapDict[part[1]], 993)\n\n   \n\n\n \n    def __enter__(self):\n        try:\n        \tself.imap.login(self.user, self.password)\n        \treturn self\n        except:\n        \tprint "Invalid Credentials!!"\n\n    def __exit__(self, type, value, traceback):\n        self.imap.close()\n        self.imap.logout()\n\n    def get_count(self):\n        self.imap.select(\'Inbox\')\n        status, data = self.imap.search(None, \'UNSEEN\')\n        return sum(1 for num in data[0].split())\n\n    def fetch_message(self, num):\n        self.imap.select(\'Inbox\')\n        status, data = self.imap.fetch(str(num), \'(RFC822)\')\n        email_msg = email.message_from_string(data[0][1])\n        return email_msg\n        \n    def get_msg_ids(self):\n        self.imap.select(\'Inbox\')\n        ctr = 0\n        msg_ids = []\n        status, data = self.imap.search(None, \'UNSEEN\')\n        for num in reversed(data[0].split()):\n        \tctr = ctr + 1\n        \tmsg_ids = msg_ids + [num]\n        \tif ctr == 11:\n        \t\tbreak\n        return msg_ids\n         \n    def get_msg(self,unread_msg_id):\n        #print unread_msg_id\n        detach_dir = \'.\'\n        self.imap.select(\'Inbox\')\n        status1, data1 = self.imap.search(None, \'UNSEEN\')\n        status, data = self.imap.fetch(unread_msg_id, \'(BODY.PEEK[])\')\n        #BODY.PEEK[] structure is used such that no changes are made to unseen flag of email structbody\n        email_msg = message_from_string(data[0][1])\n        #print email_msg\n    \t#print "hello"\n    \tmsg = {}\n    \tmsg[\'Date\'] = email_msg[\'Date\']\n    \tmsg[\'From\'] = email_msg[\'From\']\n    \tmsg[\'Subject\'] = email_msg[\'Subject\']\n    \tmsg[\'Content\'] = ""\n    \t#print msg\n    \tif email_msg.is_multipart() is False:\n    \t\tmsg[\'Content\'] = email_msg.get_payload()\n    \t\t#print msg\n    \t\tif not msg.has_key(\'Attachments\'):\n    \t\t\tmsg[\'Attachments\'] = "No Attachments"\n    \t\tmymsg = "Date: " + email_msg[\'Date\'] + "<br>From: " + msg[\'From\'] + "<br>Subject: " + msg[\'Subject\'] + "<br>Attachments: " + msg[\'Attachments\'] + "<br>Content: " + msg[\'Content\']\n    \t\t#print mymsg,"\\n"\n    \t\treturn mymsg\n    \telse:\n    \t\tlst = email_msg.get_payload()\n    \t\t#print msg[\'Subject\']\n    \t\tbodytext = lst[0].get_payload()\n    \t\tif isinstance(bodytext,str):\n    \t\t\tmsg[\'Content\'] = bodytext\n    \t\t#print msg\n    \t\t#else:\n    \t\t#print "HELLO: EMPTY"\n    \t\t#msg[\'Attachments\'] = ""\n    \t\t#print msg\n    \tmymsg = "Date: " + msg[\'Date\'] + "<br>From: " + msg[\'From\'] + "<br>Subject: " + msg[\'Subject\'] + "<br>Content: " + msg[\'Content\']\n    \tfor part in email_msg.walk():\n    \t\tif part.get_content_maintype() == \'multipart\':\n    \t\t\t#print "hi"\n    \t\t\tcontinue\n    \t\tif part.get(\'Content-Disposition\') is None:\n    \t\t\t#print "hi"\n    \t\t\tcontinue\n    \t\t#print "hey"\n    \t\tfileName = part.get_filename()\n    \t\t#print "hiii"\n    \t\tif bool(fileName):\n    \t\t\t#print "hi"\n    \t\t\tif msg.has_key(\'Attachments\'):\n    \t\t\t\tmsg[\'Attachments\'] = msg[\'Attachments\'] + fileName + "<br>"\n    \t\t\t\t#print msg[\'Attachments\']\n    \t\t\telse:\n    \t\t\t\tmsg[\'Attachments\'] = fileName + "<br>"\n    \t\t\t\t#print msg[\'Attachments\']\n\t\t\t\tif \'attachments\' not in os.listdir(detach_dir):\n\t\t\t\t\tos.mkdir(\'attachments\')\n\t\t\t\tfilePath = os.path.join(detach_dir, \'attachments\', fileName)\n\t\t\t\tif not os.path.isfile(filePath) :\n\t\t\t\t\t#print "File:",fileName\n\t\t\t\t\tfp = open(filePath, \'wb\')\n\t\t\t\t\tfp.write(part.get_payload(decode=True))\n\t\t\t\t\tfp.close()\n\t\t\tcontinue\n\t\tif not msg.has_key(\'Attachments\'):\n\t\t\tmsg[\'Attachments\'] = "No Attachments"\n\t\t#print msg\n\t\tmymsg = "Date:" + msg[\'Date\'] + "<br>From:" + msg[\'From\'] + "<br>Subject:" + msg[\'Subject\'] + "<br>Attachments:" + msg[\'Attachments\'] + "<br>Content: " + msg[\'Content\']\n\t\t#mymsg = "{\'Date\': \'ab\'}"\n\t\t#print mymsg,"\\n"\n\t\treturn mymsg\n\n\tdef getmsg(self,unread_msg_id):\n\t\t#print unread_msg_id\n\t\tdetach_dir = \'.\'\n\t\tself.imap.select(\'Inbox\')\n\t\tstatus1, data1 = self.imap.search(None, \'UNSEEN\')\n\t\tstatus, data = self.imap.fetch(unread_msg_id, \'(BODY.PEEK[])\')\n\t\t#BODY.PEEK[] structure is used such that no changes are made to unseen flag of email structbody\n\t\temail_msg = message_from_string(data[0][1])\n\t\t#print "hello"\n\t\tmsg = {}\n\t\tmsg[\'Date\'] = email_msg[\'Date\']\n\t\tmsg[\'From\'] = email_msg[\'From\']\n\t\tmsg[\'Subject\'] = email_msg[\'Subject\']\n\t\t#print msg\n\t\tif email_msg.is_multipart() is False:\n\t\t\tmsg[\'Content\'] = email_msg.get_payload()\n\t\t\t#print msg\n\t\t\tif not msg.has_key(\'Attachments\'):\n\t\t\t\tmsg[\'Attachments\'] = "No Attachments"\n\t\t\tmymsg = "Date: " + email_msg[\'Date\'] + "<br>From: " + msg[\'From\'] + "<br>Subject: " + msg[\'Subject\'] + "<br>Attachments: " + msg[\'Attachments\'] + "<br>Content: " + msg[\'Content\']\n\t\t\t#print mymsg,"\\n"\n\t\t\treturn mymsg\n\t\telse:\n\t\t\tlst = email_msg.get_payload()\n    \t\t#print msg[\'Subject\']\n    \t\tbodytext = lst[0].get_payload()\n    \t\tif isinstance(bodytext,str):\n    \t\t\tmsg[\'Content\'] = bodytext\n    \t\t#print msg\n    \t\t#else:\n    \t\t#print "HELLO: EMPTY"\n    \t\t#msg[\'Attachments\'] = ""\n    \t\t#print msg\n    \t#mymsg = "Date:" + msg[\'Date\'] + ",From:" + msg[\'From\'] + ",Subject:" + msg[\'Subject\'] + ",Content: " + msg[\'Content\']\n    \tif not msg.has_key(\'Attachments\'):\n    \t\tmsg[\'Attachments\'] = "No Attachments"\n    \t#print msg\n    \tmymsg = "Date: " + msg[\'Date\'] + "<br>From: " + msg[\'From\'] + "<br>Subject: " + msg[\'Subject\'] + "<br>Attachments: " + msg[\'Attachments\'] + "<br>Content: " + msg[\'Content\']\n    \t#mymsg = "{\'Date\': \'ab\'}"\n    \t#print mymsg,"\\n"\n    \treturn mymsg\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\ndef signup():\n\treturn dict()\n\ndef signup_2():\n\t"""\n\tFilling the Database\n\t"""\n\tName=request.vars.Name\n\tUsername=request.vars.Username\n\tPassword=request.vars.Password\n\tC_Password=request.vars.C_Password\n\tEmailID1=request.vars.EmailID1\n\tPassword1=request.vars.Password1\n\tEmail1=(EmailID1,Password1)\n\tEmailList=[Email1]\n\t\n\tif(request.vars.EmailID2):\n\t\tEmailID2=request.vars.EmailID2\n\t\tPassword2=request.vars.Password2\n\t\tEmail2=(EmailID2,Password2)\n\t\tEmailList.append(Email2)\n\tif(request.vars.EmailID3):\n\t\tEmailID3=request.vars.EmailID3\n\t\tPassword3=request.vars.Password3\n\t\tEmail3=(EmailID3,Password3)\n\t\tEmailList.append(Email3)\n\tif(request.vars.EmailID4):\n\t\tEmailID4=request.vars.EmailID4\n\t\tPassword4=request.vars.Password4\n\t\tEmail4=(EmailID4,Password4)\n\t\tEmailList.append(Email4)\n\tif(request.vars.EmailID5):\n\t\tEmailID5=request.vars.EmailID5\n\t\tPassword5=request.vars.Password5\n\t\tEmail5=(EmailID5,Password5)\n\t\tEmailList.append(Email5)\n\t\n\tOrganisation = None\n\t\n\tif(request.vars.Organisation):\n\t\tOrganisation=request.vars.Organisation\n\t\t\n\tProjectList = []\n\t\n\tif(request.vars.Project1):\n\t\tProject1=request.vars.Project1\n\t\tProjectList.append(Project1)\t\t\n\tif(request.vars.Project2):\n\t\tProject2=request.vars.Project2\n\t\tProjectList.append(Project2)\n\tif(request.vars.Project3):\n\t\tProject3=request.vars.Project3\n\t\tProjectList.append(Project3)\n\t\t\n\t"""\n\tValidate Emails\n\t"""\n\tfor email in EmailList:\n\t\teid,pwd=email\n\t\tprint eid\n\t\teidpart=eid.split(\'@\')\n\t\tif len(eidpart) != 2:\n\t\t\tresponse.flash = "Invalid Email ID!"\n\t\t\tprint "invalid email id"\n\t\t\treturn dict()\n\t\tif eidpart[1] not in ImapDict:\n\t\t\tresponse.flash = "Invalid Email ID!"\n\t\t\tprint "invalid emailid"\n\t\t\treturn dict()\n\t\tif eidpart[1] == \'students.iiit.ac.in\' or eidpart[1] == \'research.iiit.ac.in\':\n\t\t\timap = imaplib.IMAP4(ImapDict[eidpart[1]], 143)\n\t\t\ttry:\n\t\t\t\timap.login(eidpart[0],pwd)\n\t\t\texcept:\n\t\t\t\tresponse.flash = "Invalid Email ID!"\n\t\t\t\tprint "invalid emailid"\n\t\t\t\treturn dict()\n\t\telse:\n\t\t\timap = imaplib.IMAP4_SSL(ImapDict[eidpart[1]], 993)\n\t\t\ttry:\n\t\t\t\timap.login(eid,pwd)\t\n\t\t\texcept:\n\t\t\t\tresponse.flash = "Invalid Email ID!"\n\t\t\t\tprint "invalid email id"\n\t\t\t\treturn dict()\n\t\n\t"""\n\tCheck if username already exists\n\t"""\n\tfor i in db(db.Users.Username == Username).select():\n\t\tresponse.flash = "Username already exists!"\n\t\tprint "username exists"\n\t\treturn dict()\n\t\n\t\n\t"""\n\tCheck if passwords match\n\t"""\n\tif Password != C_Password:\n\t\tresponse.flash = "Passwords don\'t match!"\n\t\tprint "passwords dont match"\n\t\treturn dict()\n\t\n\t"""\n\tIf all details are correct, fill the database and redirect to login page\n\t"""\n\tdb.Users.insert(Name=Name,Username=Username,Password=Password,Organisation=Organisation)\n\tdb.Projects.insert(Username=Username)\n\tdb.EmailIds.insert(Username=Username,EID1=EmailList[0][0],Pass1=EmailList[0][1])\n\t\n\tleneid = len(EmailList)\n\t\n\tif leneid > 1:\n\t\tdb(db.EmailIds.Username == Username).update(EID2=EmailList[1][0],Pass2=EmailList[1][1])\n\tif leneid > 2:\n\t\tdb(db.EmailIds.Username == Username).update(EID3=EmailList[2][0],Pass3=EmailList[2][1])\n\tif leneid > 3:\n\t\tdb(db.EmailIds.Username == Username).update(EID4=EmailList[3][0],Pass4=EmailList[3][1])\n\tif leneid > 4:\n\t\tdb(db.EmailIds.Username == Username).update(EID5=EmailList[4][0],Pass5=EmailList[4][1])\n\t\n\tlenproj = len(ProjectList)\n\n\tif lenproj > 0:\n\t\tdb(db.Projects.Username == Username).update(Project1=ProjectList[0])\n\tif lenproj > 1:\n\t\tdb(db.Projects.Username == Username).update(Project2=ProjectList[1])\n\tif lenproj > 2:\n\t\tdb(db.Projects.Username == Username).update(Project3=ProjectList[2])\n\t\t\n\tredirect(URL(\'login\'))\n\ndef cleardb():\n\tdb.Users.truncate()\n\tdb.Projects.truncate()\n\tdb.EmailIds.truncate()\n\tdb.memo.truncate()\n\ndef login():\n\treturn dict()\n\ndef login_2():\n\tflag = 0\n\tUsername = request.vars.Username\n\tPassword = request.vars.Password\n\tfor i in db(db.Users.Username == Username).select():\n\t\tflag = 1\n\t\tif i[\'Password\'] == Password:\n\t\t\tsession.Username = Username\n\t\t\tredirect(URL(\'home.html\'))\n\t\telse:\n\t\t\tresponse.flash = "Wrong Password!"\n\tif flag == 0:\n\t\tresponse.flash = "Username doesn\'t exist!"\n\treturn dict()\n\t\ndef email():\n\tif session.Username:\n\t\tfor user in db(db.EmailIds.Username == session.Username).select():\n\t\t\tctr = 1\n\t\t\tif user[\'EID2\']:\n\t\t\t\tctr = ctr + 1\n\t\t\tif user[\'EID3\']:\n\t\t\t\tctr = ctr + 1\n\t\t\tif user[\'EID4\']:\n\t\t\t\tctr = ctr + 1\n\t\t\tif user[\'EID5\']:\n\t\t\t\tctr = ctr + 1\n\t\t\temailids = []\n\t\t\tunreads = []\n\t\t\tunread_messages = []\n\t\t\tfor i in range(ctr):\n\t\t\t\ti = i + 1\n\t\t\t\temailid = \'EID\' + str(i)\n\t\t\t\tpwdid = \'Pass\' + str(i)\n\t\t\t\teid = user[emailid]\n\t\t\t\tpwd = user[pwdid]\n\t\t\t\temailids.append(eid)\n\t\t\t\twith MailBox(eid,pwd) as mbox:\n\t\t\t\t\tunread = mbox.get_count()\n\t\t\t\t\t#x = \'unread\' + str(i)\n\t\t\t\t\tunreads.append(unread)\n\t\t\t\t\tunread_msg_ids = mbox.get_msg_ids()\n\t\t\t\t\tunread_msgs = []\n\t\t\t\t\t#print unread_msg_ids\n\t\t\t\t\tif unread_msg_ids != []:\n\t\t\t\t\t\tctr2 = 0\n\t\t\t\t\t\tfor i in unread_msg_ids:\n\t\t\t\t\t\t\tctr2 = ctr2 + 1\n\t\t\t\t\t\t\tif ctr2 == 11:\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tunread_msg = get_msg(eid,pwd,unread,i)\n\t\t\t\t\t\t\tunread_msgs.append(unread_msg)\n\t\t\t\t\t#y = \'unread_msgs\' + str(i)\n\t\t\t\t\tunread_messages.append(unread_msgs)\n\t\t\treturn dict(ctr=ctr,emailids=json(emailids),unreads=json(unreads),unread_messages=json(unread_messages))\n\t\t#return dict(unread1=unread1,unread_msg_ids=json(unread_msg_ids))\n\telse:\n\t\tredirect(URL(\'login\'))\ndef get_msg(eid,pwd,unread,unread_msg_id):\n\twith MailBox(eid,pwd) as mbox:\n\t\t#print "hello"\n\t\t#print request.get_vars[\'unread_msg_id\']\n\t\t#unread_msg = mbox1.get_msg(request.get_vars[\'unread_msg_id\'])\n\t\t#print type(unread_msg),"hi"\n\t\tunread_msg = mbox.get_msg(unread_msg_id)\n\t\tif unread_msg == None:\n\t\t\tunread_msg = mbox.getmsg(unread_msg_id)\n\t\t#print unread_msg,"hello"\n\t\treturn unread_msg\n\t\t\t\n\t\ndef logout():\n\tif session.Username:\n\t\tdel session.Username\n\t\treturn dict()\n\treturn dict()\n\ndef home():\n\treturn dict()\n\ndef gotopage():\n\treturn dict()\n\ndef insert():\n\tdated = request.get_vars[\'dated\']\n\tmsg = request.get_vars[\'msg\']\n\tmsg = \'<li>\' + msg +\'</li>\'\n\n#\trows = db(db.memo.uname == \'shikha\').select()\n#\tfor row in rows:\n#\t\tif row[\'dated\'] == dated:\n#\t\t\tid = row[\'id\']\n#\t\t\tmsg = row[\'msg\']+ msg\n#\t\t\tdb(db.memo.id == row[\'id\']).update(msg =msg)\n#\t\t\tbreak\n\n\n#\telse:\n\tdb.memo.insert(uname=\'shikha\',dated= dated,msg = msg)\n\treturn dict()\n\ndef show():\n\t\n\tdated= request.get_vars[\'dated\']\n\trows = db(db.memo.dated == dated).select()\n#\ttext= \'{ "text" : [\'\n\ttext =\'<ul>\'\n\tfor row in rows:\n\t\tif row[\'uname\'] == \'shikha\' :\n\t\t\ttext += row[\'msg\']\n\n#\ttext += \']}\'\n\ttext += \'</ul>\'\n\treturn dict(text= text)\n\n\ndef showall():\n\tdated= request.get_vars[\'dated\']\n\n\tselectdate = str(dated).split(\'-\')\n\tmonth = selectdate[1]\n\tstring =\'<ul>\'\n\trows = db(db.memo.uname == \'shikha\').select()\n\tstring = \'month : \'+ month+\'<ul>\'\n\tfor i in range(1,31):\n\t\ttext=\'\'\n\t\tfor row in rows:\n\t\t\tif str(row[\'dated\']) == str(selectdate[0])+\'-\'+str(month)+\'-\'+str(i):\n\t\t\t\ttext += row[\'msg\']\n\t\t\t\tdatee =  str(selectdate[0])+\'-\'+str(month)+\'-\'+str(i)\n\t\tif text != \'\':\n\t\t\tstring += \'<li>Date : \'+ datee + \'<ul>\' + text +\'</ul></li>\'\n\tstring+= \'</ul>\'\n#\t\tvar = str(row[\'dated\']).split(\'-\')\n#\t\tif var[1] == month:\n\t\t\t\n#\t\t\tif prev == row[\'dated\']:\n#\t\t\t\ttext += row[\'msg\']\n#\t\t\telse:\n#\t\t\t\ttext+=\'</ul></li><li>Date: \' +str(row[\'dated\']) +\'<ul>\'+  row[\'msg\']\n#\t\t\tprev = row[\'dated\']\n\t\t\n\n#\ttext+=\'</ul>\'\n\treturn dict(text=string)\n\n\t\n\n\ndef show_month():\n\n\tstring =\'<ul>\'\n\tselectyear = request.get_vars[\'selectyear\']\n\tmonth = request.get_vars[\'month\']\n\trows = db(db.memo.uname == \'shikha\').select()\n\tstring = \'month : \'+ month+\'<ul>\'\n\tfor i in range(1,31):\n\t\ttext=\'\'\n\t\tfor row in rows:\n\t\t\tif str(row[\'dated\']) == str(selectyear)+\'-\'+str(month)+\'-\'+str(i):\n\t\t\t\ttext += row[\'msg\']\n\t\t\t\tdatee =  str(selectyear)+\'-\'+str(month)+\'-\'+str(i)\n\t\tif text != \'\':\n\t\t\tstring += \'<li>Date : \'+ datee + \'<ul>\' + text +\'</ul></li>\'\n\tstring+= \'</ul>\'\n\treturn dict(text=string)\n\ndef googledrive():\n\tif session.Username:\n\t\treturn dict()\n\telse:\n\t\tredirect(URL(\'login\'))\ndef display():\n\tuser = request.get_vars[\'user\']\n\tno = request.get_vars[\'no\']\n\t\t\n\trows = db(db.my_notes.notes_user == user).select()\n\ttext = \'"\'\n#\tif no == \'1\':\n#\t\tfor row in rows:\n#\t\t\ttext += row[\'note1\'] \n#\tif no ==\'2\':\n#\t\tfor row in rows:\n#\t\t\ttext += row[\'note2\'] \n#\tif no ==\'3\':\n#\t\tfor row in rows:\n#\t\t\ttext += row[\'note3\'] \n#\tif no ==\'4\':\n#\t\tfor row in rows:\n#\t\t\ttext += row[\'note4\'] \n#\tif no ==\'5\':\n#\t\tfor row in rows:\n#\t\t\ttext += row[\'note5\'] \n#\tif no ==\'6\':\n\tfor row in rows:\n\t\ttext += row[\'note\'+no] \n\ttext+= \'"\'\n\treturn dict(note1 = text)\n\ndef save():\n\t\n\tuser = request.get_vars[\'user\']\n\tno = request.get_vars[\'no\']\n\tif no ==\'1\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note1 = request.get_vars[\'text\'])\n\tif no ==\'2\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note2 = request.get_vars[\'text\'])\n\tif no ==\'3\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note3 = request.get_vars[\'text\'])\n\tif no ==\'4\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note4 = request.get_vars[\'text\'])\n\tif no ==\'5\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note5 = request.get_vars[\'text\'])\n\tif no ==\'6\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note6 = request.get_vars[\'text\'])\n\n\t#db(db.my_notes.notes_user == user).select(db.my_notes.note1)\n\treturn dict()\n\ndef notes():\n\treturn dict(user=session.Username)\n\ndef delt():\n\tuser = request.get_vars[\'user\']\n\t#db(db.my_notes.notes_user == user).delete()\n\t#db(d).delete()\n\tno = request.get_vars[\'no\']\n\tif no == \'1\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note1 =\'\')\n\tif no == \'2\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note2 =\'\')\n\tif no == \'3\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note3 =\'\')\n\tif no == \'4\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note4 =\'\')\n\tif no == \'5\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note5 =\'\')\n\tif no == \'6\':\n\t\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note6 =\'\')\n\treturn dict()\n\ndef deleteall():\n\tuser = request.get_vars[\'user\']\n\t#db(db.my_notes.notes_user == user).delete()\n\t#db(d).delete()\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note1 =\'\')\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note2 =\'\')\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note3 =\'\')\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note4 =\'\')\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note5 =\'\')\n\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note6 =\'\')\n\n\treturn dict()\n\nresponse._vars=response._caller(display)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'args'
p24
S'()'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.AttributeError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.AttributeError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S''
sS'request'
p55
cgluon.html
XML_unpickle
p56
(S's\x9ce\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>VOT</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-7a1d0d45-aafa-47e0-9c49-86df4098f71c<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_swativot</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b888bc74-886b-4179-873b-7dd53beb0c85<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_vot</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_votswat</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-7fae5706-00a8-467e-a99e-a2deec2fc6fd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8722cbf1-1f0f-47dc-9995-9f68500fe394<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-8722cbf1-1f0f-47dc-9995-9f68500fe394; session_id_votswat=127.0.0.1-7fae5706-00a8-467e-a99e-a2deec2fc6fd; session_id_swativot=127.0.0.1-b888bc74-886b-4179-873b-7dd53beb0c85; session_id_admin=127.0.0.1-7a1d0d45-aafa-47e0-9c49-86df4098f71c; session_id_vot=127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/VOT/default/notes.html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/VOT/default/display</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>user=shikha&amp;no=5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>56000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>itisha-Inspiron-5537</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/itisha/Downloads/web2py/applications/welcome/&#x27;, &#x27;/home/itisha/Downloads/web2py/applications/VOT/&#x27;, &#x27;/home/itisha/Downloads/web2py/applications/swatiVOT/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f606a3b95f0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;itisha-Inspiron-5537&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/itisha/Downloads/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-8722cbf1-1f0f-47dc-9995-9f68500fe394; session_id_votswat=127.0.0.1-7fae5706-00a8-467e-a99e-a2deec2fc6fd; session_id_swativot=127.0.0.1-b888bc74-886b-4179-873b-7dd53beb0c85; session_id_admin=127.0.0.1-7a1d0d45-aafa-47e0-9c49-86df4098f71c; session_id_vot=127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/VOT/default/notes.html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>itisha-Inspiron-5537</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/VOT/default/display</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>user=shikha&amp;no=5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>56000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/VOT/default/display?user=shikha&amp;no=5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>itisha-Inspiron-5537</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f606eccd1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f606a1c4390&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f602ead3550&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f606eccd1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f606a1c4390&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f602ead3550&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py/applications/VOT/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>display</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/itisha/Downloads/web2py/applications/welcome/&#x27;, &#x27;/home/itisha/Downloads/web2py/applications/VOT/&#x27;, &#x27;/home/itisha/Downloads/web2py/applications/swatiVOT/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f606a3b95f0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;itisha-Inspiron-5537&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/itisha/Downloads/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>itisha-Inspiron-5537</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 10, 27, 6, 29, 57, 230562)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/VOT/default/display</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 10, 27, 0, 59, 57, 230579)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f606407f610&gt;</div></td></tr></table></div>'
tRp57
sS'frames'
p58
(lp59
(dp60
S'file'
p61
S'/home/itisha/Downloads/web2py/gluon/restricted.py'
p62
sS'dump'
p63
(dp64
S'environment'
p65
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p66
sS'ccode'
p67
S'<code object <module> at 0x7f602c0e77b0, file "/...applications/VOT/controllers/default.py", line 1>'
p68
ssS'lnum'
p69
I227
sS'lines'
p70
(dp71
I224
S'            ccode = code'
p72
sI225
S'        else:'
p73
sI226
S'            ccode = compile2(code, layer)'
p74
sI227
S'        exec ccode in environment'
p75
sI228
S'    except HTTP:'
p76
sI229
S'        raise'
p77
sI230
S'    except RestrictedError:'
p78
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p79
sI222
S'    try:'
p80
sI223
S'        if isinstance(code, types.CodeType):'
p81
ssS'call'
p82
S"(code='import imaplib\\nfrom gluon.serializers import jso...dict()\\n\\nresponse._vars=response._caller(display)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py')"
p83
sS'func'
p84
S'restricted'
p85
sa(dp86
g61
S'/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py'
p87
sg63
(dp88
sg69
I647
sg70
(dp89
I640
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note3 ='')"
p90
sI641
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note4 ='')"
p91
sI642
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note5 ='')"
p92
sI643
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note6 ='')"
p93
sI644
S''
sI645
S'\treturn dict()'
p94
sI636
S'\t#db(db.my_notes.notes_user == user).delete()'
p95
sI637
S'\t#db(d).delete()'
p96
sI638
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note1 ='')"
p97
sI639
S"\tdb.my_notes.update_or_insert(db.my_notes.notes_user == user, notes_user = user,note2 ='')"
p98
ssg82
S'()'
p99
sg84
S'<module>'
p100
sa(dp101
g61
S'/home/itisha/Downloads/web2py/gluon/globals.py'
p102
sg63
(dp103
S'self'
p104
S'undefined'
p105
sS'f'
S'<function display>'
p106
ssg69
I412
sg70
(dp107
I416
S"        self.generic_patterns = ['*']"
p108
sI407
S"        self.flash = ''            # used by the default view layout"
p109
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p110
sI409
S'        self.menu = []             # used by the default view layout'
p111
sI410
S'        self.files = []            # used by web2py_ajax.html'
p112
sI411
S'        self._vars = None'
p113
sI412
S'        self._caller = lambda f: f()'
p114
sI413
S'        self._view_environment = None'
p115
sI414
S'        self._custom_commit = None'
p116
sI415
S'        self._custom_rollback = None'
p117
ssg82
S'(f=<function display>)'
p118
sg84
S'<lambda>'
p119
sa(dp120
g61
S'/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py'
p121
sg63
(dp122
S'global db'
p123
S'<DAL uri="sqlite://storage.sqlite">'
p124
sS').select'
p125
g105
sS'rows'
p126
g105
sS'user'
p127
S"'shikha'"
p128
sS'db.my_notes'
p129
g105
ssg69
I569
sg70
(dp130
I564
S"\t\tredirect(URL('login'))"
p131
sI565
S'def display():'
p132
sI566
S"\tuser = request.get_vars['user']"
p133
sI567
S"\tno = request.get_vars['no']"
p134
sI568
S''
sI569
S'\trows = db(db.my_notes.notes_user == user).select()'
p135
sI570
S'\ttext = \'"\''
p136
sI571
S"#\tif no == '1':"
p137
sI572
S'#\t\tfor row in rows:'
p138
sI573
S"#\t\t\ttext += row['note1']"
p139
ssg82
S'()'
p140
sg84
S'display'
p141
sa(dp142
g61
S'/home/itisha/Downloads/web2py/gluon/packages/dal/pydal/base.py'
p143
sg63
(dp144
S'global DAL'
p145
S"<class 'pydal.base.DAL'>"
p146
sS'builtinsuper'
p147
S"<type 'super'>"
p148
sS'self'
p149
S'<DAL uri="sqlite://storage.sqlite">'
p150
sS'key'
p151
S"'my_notes'"
p152
sS').__getattr__'
p153
S'<bound method DAL.__getattr__ of <DAL uri="sqlite://storage.sqlite">>'
p154
ssg69
I906
sg70
(dp155
I901
S'    def __getattr__(self, key):'
p156
sI902
S"        if object.__getattribute__(self, '_lazy_tables') and \\"
p157
sI903
S"                key in object.__getattribute__(self, '_LAZY_TABLES'):"
p158
sI904
S'            tablename, fields, args = self._LAZY_TABLES.pop(key)'
p159
sI905
S'            return self.lazy_define_table(tablename, *fields, **args)'
p160
sI906
S'        return super(DAL, self).__getattr__(key)'
p161
sI907
S''
sI908
S'    def __setattr__(self, key, value):'
p162
sI909
S"        if key[:1] != '_' and key in self:"
p163
sI910
S'            raise SyntaxError('
p164
ssg82
S'(self=<DAL uri="sqlite://storage.sqlite">, key=\'my_notes\')'
p165
sg84
S'__getattr__'
p166
sa(dp167
g61
S'/home/itisha/Downloads/web2py/gluon/packages/dal/pydal/helpers/classes.py'
p168
sg63
(dp169
S'builtinAttributeError'
p170
S"<type 'exceptions.AttributeError'>"
p171
ssg69
I30
sg70
(dp172
I32
S'    __setitem__ = object.__setattr__'
p173
sI33
S''
sI34
S'    def __delitem__(self, key):'
p174
sI25
S''
sI26
S'    def __getattr__(self, key):'
p175
sI27
S'        try:'
p176
sI28
S'            return self.__dict__.__getitem__(str(key))'
p177
sI29
S'        except:'
p178
sI30
S'            raise AttributeError'
p179
sI31
S''
ssg82
S'(self=<DAL uri="sqlite://storage.sqlite">, key=\'my_notes\')'
p180
sg84
g166
sasS'pyver'
p181
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p182
sS'session'
p183
g56
(S's\xa1\x00\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">Username</td><td style="vertical-align:top;">:</td><td><div>itisha</div></td></tr></table></div>'
tRp184
sS'etype'
p185
S"<type 'exceptions.AttributeError'>"
p186
sS'date'
p187
S'Tue Oct 27 06:29:57 2015'
p188
sS'response'
p189
g56
(S's\xf32\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f602eae7ca8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_vot</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/VOT/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/VOT</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/views/default/display.html&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/default/edit/VOT/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/VOT/appadmin/index&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/default/errors/VOT&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/default/about/VOT&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/display/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_vot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/itisha/Downloads/web2py/applications/VOT/sessions/14f/127/127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8&#x27;, mode &#x27;rb+&#x27; at 0x7f602eaf85d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/itisha/Downloads/web2py/applications/VOT/sessions/127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>b6d666ebec4d9c22a20f544a4f8d00cb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4cf93c89-0eb7-4227-8b6e-be54d548d9c8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_vot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>VOT</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Vot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/display.html</div></td></tr></table></div>'
tRp190
sS'locals'
p191
(dp192
S'self'
p193
S'<DAL uri="sqlite://storage.sqlite">'
p194
sS'key'
p195
S"'my_notes'"
p196
sssS'traceback'
p197
S'Traceback (most recent call last):\n  File "/home/itisha/Downloads/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py", line 647, in <module>\n  File "/home/itisha/Downloads/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/itisha/Downloads/web2py/applications/VOT/controllers/default.py", line 569, in display\n    rows = db(db.my_notes.notes_user == user).select()\n  File "/home/itisha/Downloads/web2py/gluon/packages/dal/pydal/base.py", line 906, in __getattr__\n    return super(DAL, self).__getattr__(key)\n  File "/home/itisha/Downloads/web2py/gluon/packages/dal/pydal/helpers/classes.py", line 30, in __getattr__\n    raise AttributeError\nAttributeError\n'
p198
s.